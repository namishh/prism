local colors = require("prism.themer"):getColors()

return {
  Normal = { fg = colors.foreground, bg = colors.background },
  WinSeparator = { fg = colors.darker, bg = colors.darker },
  MsgSeparator = { fg = colors.darker, bg = colors.darker },
  NoneBG = { fg = colors.foreground, bg = "NONE" },
  SignColumn = { bg = colors.background, fg = colors.background },
  MsgArea = { fg = colors.foreground, bg = colors.background },
  ModeMsg = { fg = colors.foreground, bg = colors.background },
  SpellBad = { fg = colors.color2 },
  SpellCap = { fg = colors.color12 },
  SpellLocal = { fg = colors.color12 },
  SpellRare = { fg = colors.color4 },
  NormalNC = { fg = colors.foreground, bg = colors.background },
  WildMenu = { fg = colors.color7, bg = colors.color4 },
  AbsoluteDark = { bg = colors.darker, fg = colors.foreground },
  AbsoluteCursor = { bg = colors.cursorline, fg = colors.foreground },
  CursorLineNr = { fg = colors.fg },
  Comment = { fg = colors.comment, italic = true },
  Folded = { fg = colors.color4, bg = colors.background },
  FoldColumn = { fg = colors.color12, bg = colors.background },
  LineNr = { fg = colors.color8, bg = colors.background },
  FloatBorder = { fg = colors.foreground, bg = colors.background },
  Whitespace = { fg = colors.color1 },
  VertSplit = { fg = colors.darker, bg = colors.darker },
  CursorLine = { bg = colors.background },
  CursorColumn = { bg = colors.background },
  ColorColumn = { bg = colors.background },
  NormalFloat = { bg = colors.background },
  Visual = { bg = colors.color0, fg = colors.foreground },
  VisualNOS = { bg = colors.background },
  WarningMsg = { fg = colors.color3, bg = colors.background },
  DiffAdd = { bg = colors.background, fg = colors.color12 },
  DiffChange = { bg = colors.background, fg = colors.color5 },
  DiffDelete = { bg = colors.background, fg = colors.color1 },
  QuickFixLine = { bg = colors.color2 },
  MatchParen = { fg = colors.color12, bg = colors.background },
  Cursor = { fg = colors.comment, bg = colors.cursor },
  lCursor = { fg = colors.foreground, bg = colors.cursor },
  CursorIM = { fg = colors.foreground, bg = colors.cursor },
  TermCursor = { fg = colors.foreground, bg = colors.cursor },
  TermCursorNC = { fg = colors.foreground, bg = colors.cursor },
  Conceal = { fg = colors.color4, bg = colors.background },
  Directory = { fg = colors.color12 },
  SpecialKey = { fg = colors.color12 },
  Title = { fg = colors.color11 },
  ErrorMsg = { fg = colors.color1, bg = colors.background },
  Search = { fg = colors.background, bg = colors.color10 },
  IncSearch = { fg = colors.background, bg = colors.color11 },
  Substitute = { fg = colors.color3, bg = colors.color12 },
  MoreMsg = { fg = colors.color5 },
  Question = { fg = colors.color5 },
  EndOfBuffer = { fg = colors.background },
  NonText = { fg = colors.comment },
  Variable = { fg = colors.color5 },
  String = { fg = colors.color10 },
  Character = { fg = colors.color10 },
  Constant = { fg = colors.color10 },
  Number = { fg = colors.color11 },
  Boolean = { fg = colors.color9 },
  Float = { fg = colors.color11 },
  Identifier = { fg = colors.color9 },
  Function = { fg = colors.color9 },
  Operator = { fg = colors.color6 },
  Type = { fg = colors.color6 },
  StorageClass = { fg = colors.color10 },
  Structure = { fg = colors.color12 },
  Typedef = { fg = colors.color6 },
  Keyword = { fg = colors.color14 },
  Statement = { fg = colors.color13 },
  Conditional = { fg = colors.color6 },
  Repeat = { fg = colors.color5 },
  Label = { fg = colors.color12 },
  Exception = { fg = colors.color7 },
  Include = { fg = colors.color10 },
  PreProc = { fg = colors.color5 },
  Define = { fg = colors.color5 },
  Macro = { fg = colors.color5 },
  PreCondit = { fg = colors.color5 },
  Special = { fg = colors.color9 },
  SpecialChar = { fg = colors.color9 },
  Tag = { fg = colors.color12 },
  Debug = { fg = colors.color13 },
  Delimiter = { fg = colors.color7 },
  SpecialComment = { fg = colors.color8 },
  Ignore = { fg = colors.color7, bg = colors.background },
  Todo = { fg = colors.color1, bg = colors.background },
  Error = { fg = colors.color3, bg = colors.background },
  TabLine = { fg = colors.color2, bg = colors.background },
  TabLineSel = { fg = colors.foreground, bg = colors.background },
  TabLineFill = { fg = colors.foreground, bg = colors.background },

  ['@lsp.type.comment'] = {},
  ['@lsp.type.enum'] = { link = '@type' },
  ['@lsp.type.keyword'] = { link = '@keyword' },
  ['@lsp.type.interface'] = { link = '@interface' },
  ['@lsp.type.namespace'] = { link = '@namespace' },
  ['@lsp.type.parameter'] = { link = '@parameter' },
  ['@lsp.type.property'] = { link = '@property' },
  ['@lsp.type.variable'] = {}, -- use treesitter styles for regular variables
  ['@lsp.typemod.function.defaultLibrary'] = { link = 'Special' },
  ['@lsp.typemod.variable.defaultLibrary'] = { link = '@variable.builtin' },

  -- LSP Injected Groups
  ['@lsp.typemod.operator.injected'] = { link = '@operator' },
  ['@lsp.typemod.string.injected'] = { link = '@string' },
  ['@lsp.typemod.variable.injected'] = { link = '@variable' },

  -- nvim-treesitter Markdown Headings
  ['@text.title.1.markdown'] = { link = 'markdownH1' },
  ['@text.title.1.marker.markdown'] = { link = 'markdownH1Delimiter' },
  ['@text.title.2.markdown'] = { link = 'markdownH2' },
  ['@text.title.2.marker.markdown'] = { link = 'markdownH2Delimiter' },
  ['@text.title.3.markdown'] = { link = 'markdownH3' },
  ['@text.title.3.marker.markdown'] = { link = 'markdownH3Delimiter' },
  ['@text.title.4.markdown'] = { link = 'markdownH4' },
  ['@text.title.4.marker.markdown'] = { link = 'markdownH4Delimiter' },
  ['@text.title.5.markdown'] = { link = 'markdownH5' },
  ['@text.title.5.marker.markdown'] = { link = 'markdownH5Delimiter' },
  ['@text.title.6.markdown'] = { link = 'markdownH6' },
  ['@text.title.6.marker.markdown'] = { link = 'markdownH6Delimiter' },
  ['@boolean'] = { link = 'Boolean' },
  ['@character'] = { link = 'Character' },
  ['@character.special'] = { link = '@character' },
  ['@class'] = { fg = colors.color12 },
  ['@comment'] = { link = 'Comment' },
  ['@conditional'] = { link = 'Conditional' },
  ['@constant'] = { link = 'Constant' },
  ['@constant.builtin'] = { fg = colors.color5 },
  ['@constant.macro'] = { link = '@constant' },
  ['@constructor'] = { fg = colors.color12 },
  ['@field'] = { fg = colors.color12 },
  ['@function'] = { link = 'Function' },
  ['@function.builtin'] = { fg = colors.color5 },
  ['@function.macro'] = { link = '@function' },
  ['@include'] = { link = 'Include' },
  ['@interface'] = { fg = colors.color12 },
  ['@keyword'] = { link = 'Keyword' },
  ['@keyword.operator'] = { fg = colors.color7 },
  ['@label'] = { link = 'Label' },
  ['@macro'] = { link = 'Macro' },
  ['@method'] = { fg = colors.color9 },
  ['@number'] = { link = 'Number' },
  ['@operator'] = { link = 'Operator' },
  ['@parameter'] = { fg = colors.color5, },
  ['@preproc'] = { link = 'PreProc' },
  ['@property'] = { fg = colors.color12, },
  ['@punctuation.bracket'] = { link = '@punctuation' },
  ['@punctuation.delimiter'] = { link = '@punctuation' },
  ['@punctuation.special'] = { link = '@punctuation' },
  ['@regexp'] = { link = 'String' },
  ['@repeat'] = { link = 'Repeat' },
  ['@storageclass'] = { link = 'StorageClass' },
  ['@string'] = { link = 'String' },
  ['@string.escape'] = { fg = colors.color6 },
  ['@string.special'] = { link = '@string' },
  ['@symbol'] = { link = 'Identifier' },
  ['@tag'] = { link = 'Tag' },
  ['@tag.attribute'] = { fg = colors.color5 },
  ['@tag.delimiter'] = { fg = colors.color7 },
  ['@text'] = { fg = colors.foreground },
  ['@text.strong'] = { bold = true },
  ['@text.emphasis'] = { italic = true },
  ['@text.underline'] = { underline = true },
  ['@text.strike'] = { strikethrough = true },
  ['@text.math'] = { link = 'Special' },
  ['@text.environment'] = { link = 'Macro' },
  ['@text.environment.name'] = { link = 'Type' },
  ['@text.title'] = { link = 'Title' },
  ['@text.note'] = { link = 'SpecialComment' },
  ['@text.warning'] = { fg = colors.color3 },
  ['@text.danger'] = { fg = colors.color9 },
  ['@todo'] = { link = 'Todo' },
  ['@type'] = { link = 'Type' },
  ['@variable'] = { fg = colors.foreground },
  ['@variable.builtin'] = { fg = colors.color5 },
  ['@namespace'] = { link = '@include' },
  ToggleTerm1Normal = { fg = colors.foreground, bg = colors.background },
  ToggleTerm1WinBar = { fg = colors.foreground, bg = colors.background },
}
